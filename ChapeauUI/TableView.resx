<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>